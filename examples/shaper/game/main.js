// Generated by CoffeeScript 1.6.2
var asteroids, background, collision, drawbefore, init, keypress, maindude, mouseangle, mousedown, mousemove, mousex, mousey;

Gratify.gravity = new b2Vec2(0, 0);

maindude = {};

asteroids = [];

mouseangle = mousex = mousey = 0;

background = new Image(1922, 1212);

keypress = function(which) {
  return maindude.ApplyForce({
    x: Math.cos(mouseangle) * 142.5,
    y: Math.sin(mouseangle) * 142.5
  }, maindude.GetWorldCenter());
};

mousedown = function() {
  var bullet, distf, force,
    _this = this;

  distf = vecfromangle(maindude.GetPosition().x, maindude.GetPosition().y, 0.9, mouseangle);
  bullet = box(world, distf.x, distf.y, 0.3, 0.3, {
    user_data: "bullet"
  });
  bullet.SetBullet(true);
  force = 40;
  force = new b2Vec2(Math.cos(mouseangle) * force, Math.sin(mouseangle) * force);
  bullet.ApplyImpulse(force, bullet.GetWorldCenter());
  return bullet.drawbefore = function() {
    return ctx.strokeStyle = "#0000F7";
  };
};

drawbefore = function() {
  ctx.drawImage(background, -3, -120);
  ctx.strokeStyle = "#006837";
  ctx.lineWidth = 5;
  return ctx.fillStyle = "rgba(40, 40, 40, 0.5)";
};

init = function() {
  var ast, x, y, _i, _results,
    _this = this;

  background.src = 'graphics/background.png';
  maindude = polygon(world, 20, 20, 1, 1, 3);
  maindude.drawbefore = function() {
    return ctx.strokeStyle = "#0000F7";
  };
  Gratify.follow = maindude;
  _results = [];
  for (x = _i = 1; _i <= 17; x = ++_i) {
    _results.push((function() {
      var _j, _results1;

      _results1 = [];
      for (y = _j = 1; _j <= 17; y = ++_j) {
        ast = polygon(world, 5 + (x * 9) + random(0, 2), (y * 9) + random(0, 2), random(1, 3), random(1, 3), random(4, 9), {
          user_data: "ast"
        });
        ast = circle(world, 5 + (x * 9) + random(0, 2), (y * 9) + random(0, 2) + 5, random(1, 3), {
          user_data: "ast"
        });
        _results1.push(asteroids.push(ast));
      }
      return _results1;
    })());
  }
  return _results;
};

mousemove = function(mouse_x, mouse_y) {
  var p;

  mousex = mouse_x;
  mousey = mouse_y;
  p = get_real(new b2Vec2(mouse_x, mouse_y));
  mouseangle = Math.atan2(mouse_x - (window.innerWidth / 2) + 0.5, mouse_y - (window.innerHeight / 2)) - Math.PI / 2;
  maindude.SetPositionAndAngle(maindude.GetPosition(), mouseangle);
  return maindude.SetAngularVelocity(0);
};

collision = function(contact, impulse) {
  var bodyA, bodyB,
    _this = this;

  bodyA = contact.GetFixtureA().GetBody();
  bodyB = contact.GetFixtureB().GetBody();
  if (bodyA.GetUserData() === 'bullet' || bodyB.GetUserData() === 'bullet') {
    return bodyB.drawbefore = bodyA.drawbefore = function() {
      return ctx.strokeStyle = "#FF0000";
    };
  }
};
